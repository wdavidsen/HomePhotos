<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
	<RuntimeIdentifier>win10-x64</RuntimeIdentifier>
    <Nullable>disable</Nullable>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <SpaProxyServerUrl>https://localhost:44446</SpaProxyServerUrl>
    <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
    <ImplicitUsings>enable</ImplicitUsings>
    <RootNamespace>SCS.HomePhotos.Web</RootNamespace>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <DocumentationFile>SCS.HomePhotos.Web.xml</DocumentationFile>
	<AnalysisLevel>6.0-minimum</AnalysisLevel>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.8" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

	<ItemGroup>
		<PackageReference Include="CryptoNet" Version="2.1.0" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="6.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.SignalR.Core" Version="1.1.0" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.0" />
		<PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="6.0.0" />
		<PackageReference Include="Microsoft.IdentityModel.Tokens" Version="6.14.1" />
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="6.0.0" />
		<PackageReference Include="Serilog.Extensions.Logging.File" Version="2.0.0" />
		<PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.2.3" />
		<PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="6.2.3" />
		<PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="6.2.3" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\SCS.HomePhotos.Data\SCS.HomePhotos.Data.csproj" />
	  <ProjectReference Include="..\SCS.HomePhotos.Model\SCS.HomePhotos.Model.csproj" />
	  <ProjectReference Include="..\SCS.HomePhotos.Service\SCS.HomePhotos.Service.csproj" />
	  <ProjectReference Include="..\SCS.HomePhotos\SCS.HomePhotos.csproj" />
	</ItemGroup>
	
    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>
  
  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install --legacy-peer-deps" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --omit=dev" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
	
</Project>
